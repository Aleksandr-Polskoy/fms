#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏

echo "=== –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–≥–æ—Ä–æ–¥–æ–º ==="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root –ø—Ä–∞–≤
if [[ $EUID -ne 0 ]]; then
   log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
   exit 1
fi

cd /opt/fms

log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-domain.yml down

log_info "–û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞..."
docker system prune -f

log_info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
git pull

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..."
echo "üìã package.json:"
cat frontend/package.json

echo "üìã PreparationList.vue:"
head -5 frontend/src/components/PreparationList.vue

log_info "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-domain.yml up -d --build

log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 60

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose-domain.yml ps

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
echo "üìã –õ–æ–≥–∏ MySQL:"
docker compose -f docker-compose-domain.yml logs mysql --tail=5

echo "üìã –õ–æ–≥–∏ Backend:"
docker compose -f docker-compose-domain.yml logs backend --tail=10

echo "üìã –õ–æ–≥–∏ Frontend Builder:"
docker compose -f docker-compose-domain.yml logs frontend_builder --tail=10

log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend..."
docker exec fms_backend php artisan key:generate
docker exec fms_backend php artisan migrate --force
docker exec fms_backend php artisan config:cache
docker exec fms_backend php artisan route:cache

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8000 (Backend):"
ss -tulpn | grep :8000 || echo "‚ùå –ü–æ—Ä—Ç 8000 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"

echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3000 (Frontend):"
ss -tulpn | grep :3000 || echo "‚ùå –ü–æ—Ä—Ç 3000 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
if curl -s "http://localhost:8000/api/cultures" > /dev/null; then
    log_info "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
else
    log_warn "‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker compose -f docker-compose-domain.yml logs backend --tail=20
fi

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend..."
if curl -s "http://localhost:3000" > /dev/null; then
    log_info "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
else
    log_warn "‚ö†Ô∏è Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker compose -f docker-compose-domain.yml logs frontend_builder --tail=20
fi

echo ""
log_info "=== –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞! ==="
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose-domain.yml ps
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:"
echo "Frontend: http://fms.devdemo.ru"
echo "Backend API: http://fms.devdemo.ru/api"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ FastPanel"
echo "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "–°—Ç–∞—Ç—É—Å: docker compose -f docker-compose-domain.yml ps"
echo "–õ–æ–≥–∏: docker compose -f docker-compose-domain.yml logs -f"
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker compose -f docker-compose-domain.yml down"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker compose -f docker-compose-domain.yml restart" 