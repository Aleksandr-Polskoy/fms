version: '3.8'

services:
  # MySQL база данных
  mysql:
    image: mysql:8.0
    container_name: fms_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: fms_db
      MYSQL_USER: fms_user
      MYSQL_PASSWORD: fms_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - fms_network

  # PHP Backend (Laravel)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fms_backend
    restart: unless-stopped
    environment:
      APP_NAME: "FMS"
      APP_ENV: production
      APP_DEBUG: "false"
      APP_URL: https://ваш-домен.com
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: fms_db
      DB_USERNAME: fms_user
      DB_PASSWORD: fms_password
      OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY:-}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-}
      DEEPSEEK_API_URL: https://api.deepseek.com/recommend
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    depends_on:
      - mysql
    networks:
      - fms_network

  # Nginx для Backend (внутренний)
  nginx_backend:
    image: nginx:alpine
    container_name: fms_nginx_backend
    restart: unless-stopped
    volumes:
      - ./nginx/backend-domain.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/html
    depends_on:
      - backend
    networks:
      - fms_network

  # Node.js для сборки Frontend
  frontend_builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fms_frontend_builder
    volumes:
      - ./frontend:/app
      - frontend_dist:/app/dist
    environment:
      - API_URL=https://ваш-домен.com/api
    command: sh -c "npm install && npm run build"
    networks:
      - fms_network

volumes:
  mysql_data:
  backend_storage:
  frontend_dist:

networks:
  fms_network:
    driver: bridge 